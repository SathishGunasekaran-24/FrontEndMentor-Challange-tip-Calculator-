{"version":3,"sources":["assests/logo.svg","assests/icon-dollar.svg","assests/icon-person.svg","App.js","reportWebVitals.js","index.js"],"names":["App","initialTipPercentage","useState","billAmount","setBillAmount","noOfPeople","setNoOfPeople","Tip","setTip","TipPercentage","setTipPercentage","customTipPercentage","setCustomTipPercentage","tipPerHead","setTipPerHead","amountPerHead","setAmountPerHead","addingTipPercentage","id","a","newTipPercentage","useEffect","demoVariable","Object","keys","filter","length","newtip","console","log","tipAmountCaluculation","Math","floor","class","src","logo","alt","type","value","onChange","e","target","dollar","onClick","placeholder","style","visibility","className","person","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81cd9cf8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import './App.css';\nimport React, { useEffect } from 'react';\nimport {useState} from 'react';\nimport logo from './assests/logo.svg';\nimport dollar from './assests/icon-dollar.svg';\nimport person from './assests/icon-person.svg';\n\n\nfunction App() {\n  const initialTipPercentage ={\n    '5':true,\n    '10':true,\n    '15':true,\n    '20':true,\n    '25':true\n  }\n  const [billAmount, setBillAmount] = useState('');\n  const [noOfPeople, setNoOfPeople] = useState(1);\n  const [Tip,setTip] = useState(0);\n  const [TipPercentage, setTipPercentage] = useState(initialTipPercentage);\n  const [customTipPercentage, setCustomTipPercentage] = useState('');\n  const [tipPerHead, setTipPerHead] = useState('');\n  const [amountPerHead, setAmountPerHead] = useState('')\n\n\n\n  const addingTipPercentage=async(id)=>{\n    setCustomTipPercentage('');\n    const newTipPercentage = {...initialTipPercentage};\n    newTipPercentage[id]=!TipPercentage[id];\n    setTipPercentage(newTipPercentage);\n  }\n\n  const tipAmountCaluculation = () =>{\n    const demoVariable = Object.keys(TipPercentage).filter((id)=>{\n      return !TipPercentage[id]\n    })\n    if(demoVariable.length===1 && noOfPeople){\n      const newtip=billAmount*demoVariable[0]/100;\n      setTip(+newtip);\n      console.log(newtip);\n    }\n    if(customTipPercentage && noOfPeople){\n      const newtip=billAmount*customTipPercentage/100;\n      setTip(+newtip);\n    }\n  }\n\n  const reset = () =>{\n    setTipPercentage(initialTipPercentage);\n    setNoOfPeople('');\n    setTip('');\n    setBillAmount('');\n    setCustomTipPercentage('');\n    setTipPerHead('')\n    setAmountPerHead('')\n  }\n\n  const setCustomPercentage = (e) =>{\n    setTipPercentage(initialTipPercentage);\n    setCustomTipPercentage(e.target.value);\n  }\n\n  const perHeadCount = () =>{\n    if(Tip&&noOfPeople){\n      setTipPerHead(Math.floor(Tip/noOfPeople));\n    }\n  }\n\n  useEffect(() => {\n    tipAmountCaluculation();\n    perHeadCount();\n    if(Tip&&noOfPeople){\n      setAmountPerHead(Math.floor((Tip+billAmount)/ noOfPeople));\n    }\n    console.log(Tip,billAmount,noOfPeople);\n  }, [billAmount,customTipPercentage,noOfPeople,Tip,tipPerHead,TipPercentage])\n\n  return (\n    <>\n      <div class=\"container\">\n        <div class=\"logo\">\n          <img src={logo} alt=\"Logo\" />\n        </div>\n        <div class=\"bill-area\">\n          <div class=\"input\">\n            <div class=\"bill\">\n              Bill\n              <div class=\"bill-input\">\n                <input type=\"text\" value={billAmount} onChange={(e)=>{setBillAmount(+(e.target.value))}}/>\n                <img src={dollar} alt=\"icon-dollar\" />\n              </div>\n            </div>\n            <div class=\"select-tip\">\n              Select Tip %\n              <div class=\"btn-wrapper\">\n                <button class={TipPercentage[5]?'percent-btn':'selected'} onClick={()=>addingTipPercentage(5)}>5%</button>\n                <button class={TipPercentage[10]?'percent-btn':'selected'} onClick={()=>addingTipPercentage(10)}>10%</button>\n                <button class={TipPercentage[15]?'percent-btn':'selected'} onClick={()=>addingTipPercentage(15)}>15%</button>\n                <button class={TipPercentage[20]?'percent-btn':'selected'} onClick={()=>addingTipPercentage(20)}>20%</button>\n                <button class={TipPercentage[25]?'percent-btn':'selected'} onClick={()=>addingTipPercentage(25)}>25%</button>\n                <input type=\"text\" class='percent-input' value={customTipPercentage} onChange={setCustomPercentage} placeholder=\"Custom\" />\n              </div>\n            </div>\n            <div class=\"bill\">\n              Number of People\n              <label style={noOfPeople?{visibility:\"hidden\"}:{visibility:\"visible\"}} className =\"error-message\">Can't be zero</label>\n              <div class=\"people-input\">\n                <input class={noOfPeople?'noOfPeople-input':'noOfPeople-input-error'} value={noOfPeople} onChange={(e)=>{setNoOfPeople(+(e.target.value))}} type=\"text\" />\n                <img src={person} alt=\"icon-person\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"output\">\n            <div class=\"tip-amount\">\n              <div class=\"output-tip\">\n                Tip Amount\n                <br />\n                <label class=\"tip-per-person\">/person</label>\n              </div>\n              <div class=\"tip\">{tipPerHead}</div>\n            </div>\n            <div class=\"tip-amount\">\n              <div class=\"output-tip\">\n                Total Amount\n                <br />\n                <label class=\"tip-per-person\">/person</label>\n              </div>\n              <div class=\"tip\">{amountPerHead}</div>\n            </div>\n            <button class=\"btn-reset\" onClick={reset}>Reset</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}